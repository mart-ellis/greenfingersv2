---
import Navbar from "../components/Navbar.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://api.fontshare.com/v2/css?f[]=switzer@600,800,900,700,400,300,500&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="loader">
      <h1 class="counter"></h1>
    </div>
    <Navbar />
    <slot />
  </body>
</html>
<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap");

  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  @font-face {
    font-family: "Humane";
    src: url("/fonts/Humane-Bold.woff") format("woff");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
  }

  :root {
    /* Colours */
    --black: #0f0f0f;
    --mint: #e3ffed;
    --dark-green: rgb(31, 55, 39);

    /* Fonts */
    --humane: "Humane", sans-serif;
    --sans: "Switzer", sans-serif;

    /* Letter Spacing */
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;

    --section-padding: 1rem;

    --grayscaleAmount: 0;
  }

  html {
    font-family: var(--sans);
    background-color: var(--dark-green);
    color: var(--mint);
  }

  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }

  section {
    padding: 6rem var(--section-padding);
  }

  a {
    text-decoration: none;
    color: inherit;
  }

  img {
    width: 100%;
    height: auto;
  }

  .desktop-only {
    display: none;
  }

  @media (min-width: 768px) {
    .desktop-only {
      display: initial;
    }

    .mobile-only {
      display: none;
    }
  }

  .loader {
    position: fixed;
    inset: 0;
    background: var(--dark-green);
    z-index: 100;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
    font-family: var(--humane);
    font-size: 25vw;
    line-height: 0.7;
    padding-right: 0.6rem;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  }

  body {
    position: fixed;
  }
</style>

<script>
  import { animate } from "motion";

  const counter = document.querySelector(".counter");
  const loader = document.querySelector(".loader");

  animate(
    (progress) => (counter.innerHTML = `${Math.round(progress * 100)}%`),
    {
      duration: 1,
      easing: "ease-out",
    }
  ).finished.then(() => {
    animate(
      loader,
      {
        clipPath: "polygon(0 100%, 100% 100%, 100% 100%, 0% 100%)",
      },
      {
        delay: 0.4,
        duration: 0.6,
      }
    ).finished.then(() => {
      document.body.style.position = "initial";
    });
  });
</script>
